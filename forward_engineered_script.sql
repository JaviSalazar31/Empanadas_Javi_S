-- MySQL Script generated by MySQL Workbench
-- Sun Jun 15 03:34:39 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema empanadas_javi_s
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema empanadas_javi_s
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `empanadas_javi_s` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `empanadas_javi_s` ;

-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`clientes` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`clientes` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `telefono` VARCHAR(20) NULL DEFAULT NULL,
  `direccion` VARCHAR(200) NULL DEFAULT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`empleados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`empleados` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`empleados` (
  `id_empleado` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `puesto` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_empleado`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`pedidos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`pedidos` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`pedidos` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_cliente` INT NULL DEFAULT NULL,
  `id_empleado` INT NULL DEFAULT NULL,
  `tipo_venta` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `id_cliente` (`id_cliente` ASC) VISIBLE,
  INDEX `id_empleado` (`id_empleado` ASC) VISIBLE,
  CONSTRAINT `pedidos_ibfk_1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `empanadas_javi_s`.`clientes` (`id_cliente`),
  CONSTRAINT `pedidos_ibfk_2`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `empanadas_javi_s`.`empleados` (`id_empleado`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`sabores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`sabores` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`sabores` (
  `id_sabor` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `tipo` VARCHAR(50) NULL DEFAULT NULL,
  `precio` DECIMAL(8,2) NOT NULL,
  PRIMARY KEY (`id_sabor`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`detallepedidos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`detallepedidos` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`detallepedidos` (
  `id_detalle` INT NOT NULL AUTO_INCREMENT,
  `id_pedido` INT NULL DEFAULT NULL,
  `id_sabor` INT NULL DEFAULT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`id_detalle`),
  INDEX `id_pedido` (`id_pedido` ASC) VISIBLE,
  INDEX `id_sabor` (`id_sabor` ASC) VISIBLE,
  CONSTRAINT `detallepedidos_ibfk_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `empanadas_javi_s`.`pedidos` (`id_pedido`),
  CONSTRAINT `detallepedidos_ibfk_2`
    FOREIGN KEY (`id_sabor`)
    REFERENCES `empanadas_javi_s`.`sabores` (`id_sabor`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`ingredientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`ingredientes` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`ingredientes` (
  `id_ingrediente` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `unidad` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id_ingrediente`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`logeventos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`logeventos` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`logeventos` (
  `id_log` INT NOT NULL AUTO_INCREMENT,
  `evento` TEXT NULL DEFAULT NULL,
  `fecha` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_log`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`recetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`recetas` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`recetas` (
  `id_receta` INT NOT NULL AUTO_INCREMENT,
  `id_sabor` INT NULL DEFAULT NULL,
  `id_ingrediente` INT NULL DEFAULT NULL,
  `cantidad_necesaria` DECIMAL(8,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id_receta`),
  INDEX `id_sabor` (`id_sabor` ASC) VISIBLE,
  INDEX `id_ingrediente` (`id_ingrediente` ASC) VISIBLE,
  CONSTRAINT `recetas_ibfk_1`
    FOREIGN KEY (`id_sabor`)
    REFERENCES `empanadas_javi_s`.`sabores` (`id_sabor`),
  CONSTRAINT `recetas_ibfk_2`
    FOREIGN KEY (`id_ingrediente`)
    REFERENCES `empanadas_javi_s`.`ingredientes` (`id_ingrediente`))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `empanadas_javi_s`.`stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`stock` ;

CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`stock` (
  `id_stock` INT NOT NULL AUTO_INCREMENT,
  `id_ingrediente` INT NULL DEFAULT NULL,
  `cantidad_actual` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id_stock`),
  INDEX `id_ingrediente` (`id_ingrediente` ASC) VISIBLE,
  CONSTRAINT `stock_ibfk_1`
    FOREIGN KEY (`id_ingrediente`)
    REFERENCES `empanadas_javi_s`.`ingredientes` (`id_ingrediente`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `empanadas_javi_s` ;

-- -----------------------------------------------------
-- Placeholder table for view `empanadas_javi_s`.`vista_pedidos_detallados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`vista_pedidos_detallados` (`id_pedido` INT, `cliente` INT, `empleado` INT, `tipo_venta` INT, `fecha` INT, `sabor` INT, `cantidad` INT);

-- -----------------------------------------------------
-- Placeholder table for view `empanadas_javi_s`.`vista_resumen_pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`vista_resumen_pedidos` (`id_pedido` INT, `cliente` INT, `cantidad_sabores` INT, `total_estimado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `empanadas_javi_s`.`vista_stock_bajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`vista_stock_bajo` (`nombre` INT, `cantidad_actual` INT);

-- -----------------------------------------------------
-- Placeholder table for view `empanadas_javi_s`.`vistadetalleconsubtotal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empanadas_javi_s`.`vistadetalleconsubtotal` (`id_detalle` INT, `id_pedido` INT, `id_sabor` INT, `sabor` INT, `cantidad` INT, `precio` INT, `subtotal` INT);

-- -----------------------------------------------------
-- procedure ActualizarStock
-- -----------------------------------------------------

USE `empanadas_javi_s`;
DROP procedure IF EXISTS `empanadas_javi_s`.`ActualizarStock`;

DELIMITER $$
USE `empanadas_javi_s`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ActualizarStock`(
    IN ingrediente_id INT,
    IN nueva_cantidad DECIMAL(10,2)
)
BEGIN
    UPDATE Stock SET cantidad_actual = nueva_cantidad WHERE id_ingrediente = ingrediente_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function CalcularSubtotal
-- -----------------------------------------------------

USE `empanadas_javi_s`;
DROP function IF EXISTS `empanadas_javi_s`.`CalcularSubtotal`;

DELIMITER $$
USE `empanadas_javi_s`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `CalcularSubtotal`(cant INT, precio DECIMAL(8,2)) RETURNS decimal(10,2)
    DETERMINISTIC
BEGIN
    RETURN cant * precio;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ListarPedidosPorCliente
-- -----------------------------------------------------

USE `empanadas_javi_s`;
DROP procedure IF EXISTS `empanadas_javi_s`.`ListarPedidosPorCliente`;

DELIMITER $$
USE `empanadas_javi_s`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ListarPedidosPorCliente`(IN cliente_id INT)
BEGIN
    SELECT p.id_pedido, p.fecha, s.descripcion, dp.cantidad
    FROM Pedidos p
    JOIN DetallePedidos dp ON p.id_pedido = dp.id_pedido
    JOIN Sabores s ON dp.id_sabor = s.id_sabor
    WHERE p.id_cliente = cliente_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function ObtenerPrecioSabor
-- -----------------------------------------------------

USE `empanadas_javi_s`;
DROP function IF EXISTS `empanadas_javi_s`.`ObtenerPrecioSabor`;

DELIMITER $$
USE `empanadas_javi_s`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `ObtenerPrecioSabor`(sabor_id INT) RETURNS decimal(8,2)
    DETERMINISTIC
BEGIN
    DECLARE resultado DECIMAL(8,2);
    SELECT precio INTO resultado FROM Sabores WHERE id_sabor = sabor_id;
    RETURN resultado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `empanadas_javi_s`.`vista_pedidos_detallados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`vista_pedidos_detallados`;
DROP VIEW IF EXISTS `empanadas_javi_s`.`vista_pedidos_detallados` ;
USE `empanadas_javi_s`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `empanadas_javi_s`.`vista_pedidos_detallados` AS select `p`.`id_pedido` AS `id_pedido`,`c`.`nombre` AS `cliente`,`e`.`nombre` AS `empleado`,`p`.`tipo_venta` AS `tipo_venta`,`p`.`fecha` AS `fecha`,`s`.`descripcion` AS `sabor`,`dp`.`cantidad` AS `cantidad` from ((((`empanadas_javi_s`.`pedidos` `p` join `empanadas_javi_s`.`clientes` `c` on((`p`.`id_cliente` = `c`.`id_cliente`))) join `empanadas_javi_s`.`empleados` `e` on((`p`.`id_empleado` = `e`.`id_empleado`))) join `empanadas_javi_s`.`detallepedidos` `dp` on((`p`.`id_pedido` = `dp`.`id_pedido`))) join `empanadas_javi_s`.`sabores` `s` on((`dp`.`id_sabor` = `s`.`id_sabor`)));

-- -----------------------------------------------------
-- View `empanadas_javi_s`.`vista_resumen_pedidos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`vista_resumen_pedidos`;
DROP VIEW IF EXISTS `empanadas_javi_s`.`vista_resumen_pedidos` ;
USE `empanadas_javi_s`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `empanadas_javi_s`.`vista_resumen_pedidos` AS select `p`.`id_pedido` AS `id_pedido`,`c`.`nombre` AS `cliente`,count(`dp`.`id_sabor`) AS `cantidad_sabores`,sum((`dp`.`cantidad` * `s`.`precio`)) AS `total_estimado` from (((`empanadas_javi_s`.`pedidos` `p` join `empanadas_javi_s`.`clientes` `c` on((`p`.`id_cliente` = `c`.`id_cliente`))) join `empanadas_javi_s`.`detallepedidos` `dp` on((`p`.`id_pedido` = `dp`.`id_pedido`))) join `empanadas_javi_s`.`sabores` `s` on((`dp`.`id_sabor` = `s`.`id_sabor`))) group by `p`.`id_pedido`;

-- -----------------------------------------------------
-- View `empanadas_javi_s`.`vista_stock_bajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`vista_stock_bajo`;
DROP VIEW IF EXISTS `empanadas_javi_s`.`vista_stock_bajo` ;
USE `empanadas_javi_s`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `empanadas_javi_s`.`vista_stock_bajo` AS select `i`.`nombre` AS `nombre`,`s`.`cantidad_actual` AS `cantidad_actual` from (`empanadas_javi_s`.`stock` `s` join `empanadas_javi_s`.`ingredientes` `i` on((`s`.`id_ingrediente` = `i`.`id_ingrediente`))) where (`s`.`cantidad_actual` < 1000);

-- -----------------------------------------------------
-- View `empanadas_javi_s`.`vistadetalleconsubtotal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `empanadas_javi_s`.`vistadetalleconsubtotal`;
DROP VIEW IF EXISTS `empanadas_javi_s`.`vistadetalleconsubtotal` ;
USE `empanadas_javi_s`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `empanadas_javi_s`.`vistadetalleconsubtotal` AS select `d`.`id_detalle` AS `id_detalle`,`d`.`id_pedido` AS `id_pedido`,`d`.`id_sabor` AS `id_sabor`,`s`.`descripcion` AS `sabor`,`d`.`cantidad` AS `cantidad`,`s`.`precio` AS `precio`,(`d`.`cantidad` * `s`.`precio`) AS `subtotal` from (`empanadas_javi_s`.`detallepedidos` `d` join `empanadas_javi_s`.`sabores` `s` on((`d`.`id_sabor` = `s`.`id_sabor`)));
USE `empanadas_javi_s`;

DELIMITER $$

USE `empanadas_javi_s`$$
DROP TRIGGER IF EXISTS `empanadas_javi_s`.`trigger_insert_detalle` $$
USE `empanadas_javi_s`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `empanadas_javi_s`.`trigger_insert_detalle`
AFTER INSERT ON `empanadas_javi_s`.`detallepedidos`
FOR EACH ROW
BEGIN
    DECLARE sabor_nombre VARCHAR(100);
    SELECT descripcion INTO sabor_nombre FROM Sabores WHERE id_sabor = NEW.id_sabor;
    INSERT INTO LogEventos (evento) VALUES (CONCAT('Nuevo detalle agregado: ', sabor_nombre, ' x ', NEW.cantidad));
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
